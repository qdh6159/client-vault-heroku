{"version":3,"sources":["components/filters/FilterComponent.jsx","components/table/TableComponent.jsx","components/accounts/Accounts.jsx","components/Edit.jsx","components/accounts/AccountDetail.jsx","components/ClientList/ClientList.jsx","components/Component.jsx","components/nav.jsx","components/statusBar/StatusBar.jsx","components/MainContainer.jsx","components/Register/Register.jsx","components/AuthGateway/Login/Login.jsx","components/AuthGateway/AuthGateway.jsx","App.js","serviceWorker.js","index.js"],"names":["Filter","props","useState","dropdownOpen","setDropdownOpen","Dropdown","isOpen","toggle","prevState","DropdownToggle","caret","style","marginTop","DropdownMenu","DropdownItem","onClick","turnOffRetirementFilter","engageRetirementFilter","StockTable","class","Table","size","dark","hover","scope","Accounts","ListGroup","ListGroupItem","active","value","Badge","color","tag","action","Button","block","Edit","handleChange","e","setState","target","name","handleSubmit","console","log","updateClient","id","state","open","rating","retirement","address","birth","notes","profession","bind","this","onChange","onSubmit","htmlFor","FormInput","type","placeholder","Component","AccountDetail","ListGroupItemHeading","ListGroupItemText","ClientList","setName","setValue","setId","loading","setLoading","setAddress","setRating","setBirth","setNotes","setProfession","clients","map","client","index","key","_id","Card","backgroundColor","borderColor","CardHeader","CardFooter","setTimeout","deleteClient","Container","fluid","Row","Col","xs","lg","Spinner","width","height","className","Jumbotron","sm","positionRight","BasicModalExample","preventDefault","createClient","React","ClientNav","theme","StatusBar","src","Toast","float","marginRight","ToastHeader","icon","ToastBody","MainContainer","a","async","fetch","process","method","json","parsedResponse","status","code","filter","formData","body","JSON","stringify","credentials","headers","data","newClient","getClients","qualifiedFilter","currentClient","clientFilter","includes","updatePlant","Register","handleRegister","username","password","Login","handleLogin","AuthGateway","role","App","registerResonse","loggedIn","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.93557874.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nconst Filter = (props) => {\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const toggle = () => setDropdownOpen(prevState => !prevState);\n\n  return (\n    <Dropdown isOpen={dropdownOpen} toggle={toggle}>\n      <DropdownToggle caret style={{marginTop:20}}>\n        Filters\n        </DropdownToggle>\n      <DropdownMenu>\n        <DropdownItem onClick={props.turnOffRetirementFilter}>Reset filter</DropdownItem>\n        <DropdownItem onClick={props.engageRetirementFilter}>Qualified/retirement</DropdownItem>\n        <DropdownItem>Private Clients</DropdownItem>\n        <DropdownItem>Watchlist</DropdownItem>\n        \n      </DropdownMenu>\n    </Dropdown>\n  );\n}\n\nexport default Filter;","import React from 'react';\nimport { Table } from 'reactstrap';\nconst StockTable = (props) => {\n  return (\n    <div class=\"tableDiv\">\n    <Table size=\"sm\" dark hover >\n        \n      <thead>\n        <tr>\n          <th>Ticker</th>\n          <th>Company</th>\n          <th>Price</th>\n          <th>Quantity</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <th scope=\"row\">AAPL</th>\n          <td>Apple</td>\n          <td>$241.58</td>\n          <td>200</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">YUM</th>\n          <td>YUM! Brands</td>\n          <td>$89.50</td>\n          <td>100</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">LMD</th>\n          <td>Lockheed Martin</td>\n          <td>$376.74</td>\n          <td>230</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">GOOG</th>\n          <td>Alphebet Inc.</td>\n          <td>$1,259.46</td>\n          <td>200</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">TSLA</th>\n          <td>Tesla Inc.</td>\n          <td>$312.50</td>\n          <td>150</td>\n        </tr>\n        <tr>\n          <th scope=\"row\">NFLX</th>\n          <td>Netflix</td>\n          <td>$291.30</td>\n          <td>300</td>\n        </tr>\n      </tbody>\n      \n    </Table>\n    </div>\n  );\n}\n\nexport default StockTable;","import React from 'react';\nimport { Badge, Spinner, ListGroup, ListGroupItem, ListGroupItemHeading, ListGroupItemText, Button, ButtonGroup } from 'reactstrap';\n\nconst Accounts = (props) => {\n  return (\n    <ListGroup>\n      <ListGroupItem active>\n      <span class=\"onValue\">\n        All Accounts\n        </span>\n        <h2 class =\"mainValue\">{props.value}</h2>\n        <p class=\"percent\">+ 1.97%  <h5 class=\"privateClient\"> <Badge size=\"sm\" color=\"secondary\">Private Client</Badge></h5></p> \n        \n      </ListGroupItem>\n      <ListGroupItem>\n\n      \n\n        \n        \n        {/* <h3>Buttons </h3> */}\n      <ListGroup>\n        <ListGroupItem active tag=\"button\" action>Summary</ListGroupItem>\n        <ListGroupItem tag=\"button\" action>+ New Work Order</ListGroupItem>\n        <ListGroupItem tag=\"button\" action>Documents</ListGroupItem>\n        \n      </ListGroup>\n        \n      </ListGroupItem>\n      <Button color=\"primary\" size=\"lg\" block>Call</Button>\n    <Button color=\"success\" size=\"lg\" block>Place Trade</Button>\n    </ListGroup>\n    \n  );\n}\n\nexport default Accounts;","import React, {Component} from 'react'\nimport { Button, Modal, ModalBody, ModalHeader } from \"shards-react\";\nimport { Form, FormInput, FormGroup, FormTextarea } from \"shards-react\";\nimport { Container, Col } from \"shards-react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\"\nimport { Badge, Spinner, ListGroup, ListGroupItem, ListGroupItemHeading, ListGroupItemText,  ButtonGroup } from 'reactstrap';\n\n\nexport default class Edit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      open: false,\n      name: \"\",\n      value: \"\",\n      rating: \"\",\n      retirement: \"\",\n      address: \"\",\n      birth: \"\",\n      notes: \"\",\n      profession: \"\"\n  \n     };\n    this.toggle = this.toggle.bind(this);\n  }\n  toggle() {\n    this.setState({\n      open: !this.state.open\n    });\n  }\n  handleChange = (e) => {\n    this.setState ({\n        [e.target.name] : e.target.value\n    })\n  }\n  handleSubmit = () => {\n    // e.preventDefault();\n    console.log(\"CLICKED EDIT client button\")\n    this.toggle()\n    this.props.updateClient(this.props.id,this.state)\n}\n\n  render() {\n    const { open } = this.state;\n    return (\n      <div>\n        <Button  color=\"primary\" size=\"lg\" block  onClick={this.toggle}> + Edit</Button>\n        <Modal  open={open} toggle={this.toggle}>\n          <ModalHeader>+ New Client 🌿</ModalHeader>\n          <ModalBody>👋 </ModalBody>\n            <Container>\n              <Col >\n                <Form onChange={this.handleChange} onSubmit={this.handleSubmit}>\n                  <FormGroup>\n                    <label htmlFor=\"name\"> Name</label>\n                    <FormInput onChange={this.handleChange} name=\"name\" id=\"name\" FormInput={this.props.name} type=\"text\" value={this.state.name ? this.state.name : this.props.name} />\n                  </FormGroup>\n          \n                  <FormGroup>\n                    <label htmlFor=\"value\">Value</label>\n                  <FormInput onChange={this.handleChange} name=\"value\" id=\"value\" placeholder=\"value\" type=\"text\" value={this.state.value ? this.state.value : this.props.value}/>                       \n                  </FormGroup>\n\n                  <FormGroup>\n                    <label htmlFor=\"rating\">Rating</label>\n                  <FormInput onChange={this.handleChange} name=\"rating\" id=\"rating\" placeholder=\"rating\" type=\"text\" value={this.state.rating ? this.state.rating : this.props.rating}/>                       \n                  </FormGroup>\n\n                  <FormGroup>\n                    <label htmlFor=\"retirement\">Retirement?</label>\n                  <FormInput onChange={this.handleChange} name=\"retirement\" id=\"retirement\" placeholder=\"retirement\" type=\"text\" value={this.state.retirement ? this.state.retirement : this.props.retirement}/>                       \n                  </FormGroup>\n\n                  <FormGroup>\n                    <label htmlFor= \"address\" >Address</label>\n                    <FormInput onChange={this.handleChange} name=\"address\" id=\"retirement\" placeholder=\"address\"  type=\"text\" value={this.state.address ? this.state.address : this.props.address}></FormInput>\n                  </FormGroup>\n\n                  <FormGroup>\n                    <label htmlFor= \"birth\" >Birth</label>\n                    <FormInput onChange={this.handleChange} name=\"birth\" id=\"retirement\" placeholder=\"birth\"  type=\"text\" value={this.state.birth ? this.state.birth : this.props.birth}></FormInput>\n                  </FormGroup>\n\n                  <FormGroup>\n                    <label htmlFor= \"notes\" >Notes</label>\n                    <FormTextarea onChange={this.handleChange} name=\"notes\" id=\"retirement\" placeholder=\"notes\" type=\"text\" value={this.state.notes ? this.state.notes : this.props.notes}></FormTextarea>\n                    {/* <FormInput onChange={this.handleChange} name=\"notes\" id=\"retirement\" placeholder=\"notes\"  ></FormInput> */}\n                  </FormGroup>\n\n                  <FormGroup>\n                    <label htmlFor= \"profession\" >Profession</label>\n                    <FormInput onChange={this.handleChange} name=\"profession\" id=\"retirement\" placeholder=\"profession\" type=\"text\" value={this.state.profession ? this.state.profession : this.props.profession} ></FormInput>\n                  </FormGroup>\n      \n                    <br></br>\n                    <Button block type=\"submit\">Save</Button>\n                    \n                    <br></br>          \n                </Form>\n              </Col>\n            </Container>\n            </Modal>\n      </div>\n    );\n  }\n}","import React, {useState} from 'react';\nimport { Badge, Spinner, ListGroup, ListGroupItem, ListGroupItemHeading, ListGroupItemText, Button, ButtonGroup } from 'reactstrap';\nimport Edit from '../Edit'\n\nfunction AccountDetail(props) {\n  return (\n    <ListGroup>\n      <ListGroupItem active>\n     \n      {props.name}\n       \n        \n       \n        {/* <h2 class =\"mainValue\">{props.value}</h2> */}\n        <p class=\"percent\">+ 1.87%   <h5 class=\"privateClient\"> <Badge size=\"sm\" color=\"secondary\">Private Client</Badge></h5></p> \n        \n      </ListGroupItem>\n      <ListGroupItem>\n\n      \n\n        \n        \n        {/* <h3>Buttons </h3> */}\n      <ListGroup>\n        <ListGroup>\n      <ListGroupItem >\n        <ListGroupItemHeading>Recent Activity</ListGroupItemHeading>\n        {/* <ListGroupItemText> */}\n            <ul class=\"info\">\n                <li>Sold 500 shares of AAPL </li>\n                <li>Bought 400 shares of FB</li>\n                <li>Sold 150 shares of TSLA</li>\n            </ul>\n        \n        {/* </ListGroupItemText>         */}\n        {/* <hr className=\"my-2\" /> */}\n         \n        \n        \n      </ListGroupItem>\n      <ListGroupItem>\n        <ListGroupItemHeading>Contact & Personal Info</ListGroupItemHeading>\n        {/* <ListGroupItemText> */}\n        <ul class=\"info\">\n                <li>ADDRESS: {props.address} </li>\n                <li>DOB: {props.birth}</li>\n                <li>Profession: {props.profession}</li>\n                <li>Email: myclient@gmail.com</li>\n            </ul>\n        {/* </ListGroupItemText> */}\n      </ListGroupItem>\n      <ListGroupItem>\n        <ListGroupItemHeading>Notes</ListGroupItemHeading>\n        <ListGroupItemText>\n        {props.notes}\n        </ListGroupItemText>\n      </ListGroupItem>\n    </ListGroup>\n        \n      </ListGroup>\n        \n      </ListGroupItem>\n      {/* <Button color=\"primary\" size=\"lg\" block>Edit</Button> */}\n      <Edit updateClient={props.updateClient} value={props.value} name={props.name} birth ={props.birth} address={props.address} notes={props.notes} profession={props.profession} id={props.id} rating={props.rating}  />\n    <Button color=\"success\" size=\"lg\" block>+ New Appointment</Button>\n    <Button color=\"secondary\" size=\"lg\" block>Correspondence</Button>\n    </ListGroup>\n    \n  );\n}\n\nexport default AccountDetail;","import React, {useState} from 'react';\nimport { Table, Container, Card, Button, CardHeader, CardFooter, CardBody,CardTitle, Jumbotron, Row, Col, Spinner }from 'reactstrap';\nimport Filter from '../filters/FilterComponent'\nimport StockTable from '../table/TableComponent'\nimport Accounts from '../accounts/Accounts'\nimport AccountDetail from '../accounts/AccountDetail'\n// import Chart from '../chart/Chart'\n// import StockNav from '../stockNav/StockNav'\n\nfunction ClientList(props){\n  const [name, setName] = useState(null)\n  const [value, setValue] = useState(null)\n  const [id, setId] = useState(null)\n  const [loading, setLoading] = useState(false)\n  const [address, setAddress] = useState(null)\n  const [rating, setRating] = useState(null)\n  const [birth, setBirth] = useState(null)\n  const [notes, setNotes] = useState(null)\n  const [profession, setProfession] = useState(null)\n  \n\n  const clients = props.clients.map(function(client, index){\n    const click = function(){\n      console.log(\"click button\")\n      console.log(client.name)\n      console.log(client._id)\n      console.log(client.profession)\n      setLoading(true)\n      setName(client.name)\n      setValue(client.value)\n      setId(client._id)\n      setAddress(client.address)\n      setRating(client.rating)\n      setBirth(client.birth)\n      setNotes(client.notes)\n      setProfession(client.profession)\n\n      setTimeout(() => {\n        setLoading(false)\n        console.log('loading');\n      }, 750);\n\n    }\n\n      return (\n        <li key={client._id}> \n          <Card style={{ backgroundColor: '#333', borderColor: '#333' }}>\n          <CardHeader tag=\"h3\">{client.name}</CardHeader>\n          {/* <CardBody>\n            <CardTitle>Portfolio Value: {client.value}</CardTitle>\n            <CardTitle>Last contact: 2018-05-23</CardTitle>  \n          </CardBody> */}\n          <CardFooter>\n            <Button onClick={()=> click()}>View Details</Button>\n            <Button color=\"danger\" onClick={()=> props.deleteClient(client._id)}>delete</Button>\n          </CardFooter>\n        </Card>\n        </li>)\n    })\n  \n\n    if (loading){\n      return (\n      \n        <Container fluid>\n        <Row>\n          <Col id=\"playList\" xs=\"3\">1 / 12\n          <ul class=\"plantList\">{clients}</ul>\n          </Col>\n  \n          <Col style={{marginTop: 100}}>2 / 12\n            <div fluid lg=\"3\">\n            <Spinner style={{ width: '10rem', height: '10rem' }} type=\"grow\" color=\"primary\" />\n              <p className=\"lead\">\n              <Button color=\"primary\">Learn More</Button>\n              </p>\n            </div>  \n  \n            <Jumbotron  sm=\"3\">\n                <h1 className=\"display-3\">Loading Client</h1>\n                <Button color=\"primary\">Learn More</Button>  \n            </Jumbotron>\n          </Col>\n        </Row>\n        </Container>\n       \n        )\n    }else{\n      // const deleteClient = (id) => {\n      //   console.log(\"Deleting client\")\n      //   props.deleteClient(id)\n      // let id = {id}\n      // let birth = {props.clients.birth}\n      // console.log({id})\n      return (\n      \n        <Container fluid>\n        <Row>\n          <Col id=\"playList\" xs=\"3\">\n          <Filter turnOffRetirementFilter={props.turnOffRetirementFilter} engageRetirementFilter= {props.engageRetirementFilter} />\n          <ul class=\"plantList\">{clients}</ul>\n          </Col>\n  \n          <Col class=\"bigCol\" style={{marginTop: 30},{positionRight: 10}}>2 / 12\n            <div fluid lg=\"3\" class=\"mainJumbo\">\n\n              <h1 class=\"mainName\">{name} <span class=\"mainSpin\">\n                {/* <Spinner style={{ width: '3rem', height: '3rem' }} type=\"grow\" color=\"success\" /> */}\n                </span></h1> \n              <div class=\"accounts\">\n                <Accounts value = {value} />\n                \n              </div>\n              {/* <h1 className=\"display-3\">Name:{name} </h1>\n              <h2 className=\"display-3\">Value:{value} </h2> */}\n              <p className=\"lead\">Top Preformers</p>\n              {/* <hr className=\"my-2\" /> */}\n              {/* <StockNav /> */}\n              <StockTable />\n\n              <p className=\"lead\">\n              <Button color=\"primary\">See More</Button>\n              {/* <Button color=\"danger\" onClick={()=> props.deleteClient({id})}>delete</Button> */}\n              </p>\n            </div>  \n\n            {/* <Chart /> */}\n  \n            <Jumbotron sm=\"3\" style={{ backgroundColor: '#333', borderColor: '#333' }}>\n                <h1 className=\"display-3\">Social Media Activity</h1>\n                <Button color=\"primary\">Learn More</Button>  \n            </Jumbotron>\n          \n          </Col>\n\n          <div class=\"rightColumn\">\n            <Col >\n              <h3 class=\"clientInfo\">Client Info</h3>\n\n           \n              <AccountDetail updateClient={props.updateClient} value={value} name={name} birth ={birth} address={address} notes={notes} profession={profession} id={id} rating={rating} />\n            </Col>\n          </div>  \n        </Row>\n        </Container>\n       \n        )\n    }\n    \n}\n\nexport default ClientList\n","import React from 'react'\nimport { Button, Modal, ModalBody, ModalHeader } from \"shards-react\";\nimport { Form, FormInput, FormGroup, FormTextarea } from \"shards-react\";\nimport { Container, Col } from \"shards-react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\"\n\nexport default class BasicModalExample extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      open: false,\n      name: \"\",\n      value: \"\",\n      rating: \"\",\n      retirement: \"\",\n      address: \"\",\n      birth: \"\",\n      notes: \"\",\n      profession: \"\"\n  \n     };\n    this.toggle = this.toggle.bind(this);\n  }\n  toggle() {\n    this.setState({\n      open: !this.state.open\n    });\n  }\n  handleChange = (e) => {\n    this.setState ({\n        [e.target.name] : e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(\"CLICKED new client button\")\n    this.props.createClient(this.state)\n}\n\n  render() {\n    const { open } = this.state;\n    return (\n      <div>\n        <Button  id=\"newButton\" onClick={this.toggle}> + New</Button>\n        <Modal  open={open} toggle={this.toggle} >\n          <ModalHeader>+ New Client 🌿</ModalHeader>\n          <ModalBody>👋 </ModalBody>\n            <Container>\n              <Col >\n                <Form onSubmit={this.handleSubmit}>\n                  <FormGroup>\n                    <label htmlFor=\"name\"> Name</label>\n                    <FormInput onChange={this.handleChange} name=\"name\" id=\"name\" placeholder=\"Name\" />\n                  </FormGroup>\n          \n                  <FormGroup>\n                    <label htmlFor=\"value\">Value</label>\n                  <FormInput onChange={this.handleChange} name=\"value\" id=\"value\" placeholder=\"value\" />                       \n                  </FormGroup>\n\n                  <FormGroup>\n                    <label htmlFor=\"rating\">Rating</label>\n                  <FormInput onChange={this.handleChange} name=\"rating\" id=\"rating\" placeholder=\"rating\" />                       \n                  </FormGroup>\n\n                  <FormGroup>\n                    <label htmlFor=\"retirement\">Retirement?</label>\n                  <FormInput onChange={this.handleChange} name=\"retirement\" id=\"retirement\" placeholder=\"retirement\" />                       \n                  </FormGroup>\n\n                  <FormGroup>\n                    <label htmlFor= \"address\" >Address</label>\n                    <FormInput onChange={this.handleChange} name=\"address\" id=\"retirement\" placeholder=\"address\"  ></FormInput>\n                  </FormGroup>\n\n                  <FormGroup>\n                    <label htmlFor= \"birth\" >Birth</label>\n                    <FormInput onChange={this.handleChange} name=\"birth\" id=\"retirement\" placeholder=\"birth\"  ></FormInput>\n                  </FormGroup>\n\n                  <FormGroup>\n                    <label htmlFor= \"notes\" >Notes</label>\n                    <FormTextarea onChange={this.handleChange} name=\"notes\" id=\"retirement\" placeholder=\"notes\" ></FormTextarea>\n                    {/* <FormInput onChange={this.handleChange} name=\"notes\" id=\"retirement\" placeholder=\"notes\"  ></FormInput> */}\n                  </FormGroup>\n\n                  <FormGroup>\n                    <label htmlFor= \"profession\" >Profession</label>\n                    <FormInput onChange={this.handleChange} name=\"profession\" id=\"retirement\" placeholder=\"profession\"  ></FormInput>\n                  </FormGroup>\n      \n                    <br></br>\n                    <Button block type=\"submit\">Save</Button>\n                    \n                    <br></br>          \n                </Form>\n              </Col>\n            </Container>\n            </Modal>\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport { Nav, NavItem } from \"shards-react\";\nimport { FormInput } from \"shards-react\";\nimport { Button } from \"shards-react\";\nimport BasicModalExample from \"./Component\"\n\n\nexport default function ClientNav(props) {\n    return (\n        <div>\n        <Nav>\n        {/* <NavItem>\n          <NavLink active href=\"#\">\n            Client<span role=\"img\">👥</span>Keeper<span role=\"img\">🔐</span>\n          </NavLink>\n        </NavItem> */}\n        \n        <NavItem id=\"form-control\">\n          <FormInput placeholder=\"Search\" id=\"search\"/>\n          <BasicModalExample createClient = {props.createClient}/>\n          <Button theme=\"success\">Watchlist</Button>\n        </NavItem>\n        \n        <NavItem>\n        \n        </NavItem>\n        <NavItem>\n        \n        </NavItem>\n        \n        \n      </Nav>\n      </div>\n    );\n  }","import React from \"react\"\nimport {Toast, ToastBody, ToastHeader,  Table, Badge, Container, Card, Button, CardHeader, CardFooter, CardBody,CardTitle, Jumbotron, Row, Col, Spinner }from 'reactstrap';\n\nfunction StatusBar(props) {\n\n\n\n    return (\n        <div class=\"statusBar\">\n            <div class=\"callOne\"><img src=\"https://pbs.twimg.com/profile_images/1188847475291033600/8_ELIzfQ_400x400.jpg\"></img></div>\n            <div class=\"callTwo\" >\n                <div class=\"callName\">\n                    <h2 class=\"callName\">Tim Cook</h2>\n                </div>\n                <div class=\"callType\"><Badge size=\"sm\" color=\"secondary\">Private Client</Badge></div>\n                <div class=\"callIncoming\"><h5 class=\"callIn\">INCOMING CALL</h5></div>\n            </div>\n            <div class=\"callThree\" >\n            <span class=\"mainSpin\"><Spinner style={{ width: '4rem', height: '4rem' }} type=\"grow\" color=\"success\" /></span>\n            <div class=\"callAnswer\"><Button style={{ width: '6rem', height: '2.5rem' }} size=\"sm\" color=\"success\">Answer</Button></div>\n            </div>\n            <Toast style={{ float: 'right', marginTop: '1rem', marginRight: '1rem' }}>\n        <ToastHeader icon=\"secondary\">\n          1 New Email \n        </ToastHeader>\n        <ToastBody>\n          Hey do not forget to place equity trades for steen and ...\n        </ToastBody>\n      </Toast>\n            \n            \n\n        </div>\n            \n        )\n  }\n\n  export default StatusBar","import React, { Component} from 'react'\nimport ClientList from \"./ClientList/ClientList\"\nimport ClientNav from \"./nav\"\nimport StatusBar from './statusBar/StatusBar'\n\n\nclass MainContainer extends Component {\n    constructor() {\n        super();\n        this.state = {\n            clients: [],\n            qualifiedFilter: null,\n            currentClient: null,\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"component is mounting\")\n        this.getClients();\n    }\n    deleteClient = async (id) => {\n        \n        try{\n            const deleteClient = await fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/clients/${id}`, {\n                method: \"DELETE\",\n                // credentials: \"include\",\n            })\n            const parsedResponse = await deleteClient.json();\n            console.log(parsedResponse)\n            if(parsedResponse.status.code === 200) {\n                console.log(id)\n                this.setState({\n                    clients: this.state.clients.filter(client => client._id !== id)\n                    \n                })\n                console.log(this.state.clients)\n            }\n        }catch(err){\n            console.log(err)\n        }\n    }\n    updateClient = async (id, formData) => {\n        const updateClient = await fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/clients/${id}`, {\n            method: \"PUT\",\n            body: JSON.stringify(formData),\n            credentials: false,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        const parsedResponse = await updateClient.json();\n        console.log(parsedResponse)\n        if(parsedResponse.status.code === 201){\n            this.setState({\n                clients: this.state.clients.map(function(client){\n                    if(client._id === id){\n                        return parsedResponse.data\n                    }else{\n                        return client\n                    }\n                })\n            })\n        }\n        \n    }\n    createClient = async (formData) => {\n        console.log(formData)\n        try{\n            const newClient = await fetch(`${process.env.REACT_APP_BACKEND_ADDRESS}/clients`, {\n                method: \"POST\",\n                body: JSON.stringify(formData),\n                credentials: false,\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \n                }\n            })\n            const parsedResponse = await newClient.json();\n            if(parsedResponse.status.code === 201){\n                console.log(\"Got the clients\")\n                this.setState({\n                    clients: [...this.state.clients, parsedResponse.data]\n                })\n            }\n            console.log(\"********************\")\n            console.log(this.state)\n        }catch(err) {\n\n        }\n    }\n    getClients = async () => {\n        try{\n            console.log(\"fetching...\")\n            const clients = await fetch(\"https://git.heroku.com/client-vault-heroku.git/clients\")\n            const parsedResponse = await clients.json();\n        if(parsedResponse.status.code === 200){\n            this.setState({\n                clients: parsedResponse.data})\n                console.log(parsedResponse.data)\n                console.log(\"Success\")\n                console.log(this.state)\n            }\n        }catch(err){\n            console.log(\"Broken request man\")\n            console.log(err)\n        }\n    }\n    \n    engageRetirementFilter = () => {\n        console.log(\"turned on retirement filter\")\n        this.setState({qualifiedFilter: true})\n    }\n    turnOffRetirementFilter = () => {\n        console.log(\"turned off retirement filter\")\n        this.setState({qualifiedFilter: false})\n    }\n\n    \n    render() {\n        let clientFilter = this.state.clients.filter((clients) => {\n            if(this.state.qualifiedFilter === true){\n                return clients.retirement.includes(\"yes\")\n            }else{\n                console.log(\"no filter detected - sending all clients\")\n                return this.state.clients\n            }\n        })\n        return(\n            <div>\n                <ClientNav createClient= {this.createClient} />\n                {/* <h3>.</h3> */}\n                <ClientList updateClient={this.updateClient} turnOffRetirementFilter={this.turnOffRetirementFilter} engageRetirementFilter={this.engageRetirementFilter} updatePlant={this.updatePlant} deleteClient={this.deleteClient} clients={clientFilter} />\n                <StatusBar />\n                \n            </div>\n        )\n    }\n}\n\nexport default MainContainer;","import React, { Component } from 'react'\nimport { FormInput } from \"shards-react\";\nimport { Button} from \"shards-react\";\nclass Register extends Component {\n    constructor(){\n        super();\n        this.state = {\n            username: null, \n            password: null\n        }\n    }\n    handleChange = (e) => {\n        this.setState ({\n            [e.target.name] : e.target.value\n        })\n        console.log(this.state)\n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        console.log(\"SUBMITTED THE FORM\")\n        this.props.handleRegister(this.state)\n    }\n    render(){\n        return(\n            <form onSubmit={this.handleSubmit} class=\"formOne\">\n                username: <FormInput type=\"text\" name=\"username\" onChange={this.handleChange}/>\n                password: <FormInput type=\"password\" name=\"password\" onChange={this.handleChange}/>\n                <Button type=\"submit\">Register</Button>\n            </form>\n        )\n    }\n}\n\nexport default Register","import React, { Component } from 'react'\nimport { FormInput, Button } from \"shards-react\";\n\nclass Login extends Component {\n    constructor(){\n        super();\n        this.state = {\n            username: null, \n            password: null\n        }\n    }\n    handleChange = (e) => {\n        this.setState ({\n            [e.target.name] : e.target.value\n        })\n        console.log(this.state)\n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        console.log(\"Login *********************\")\n        this.props.handleLogin(this.state)\n    }\n    render(){\n        return(\n            <form onSubmit={this.handleSubmit} class=\"formTwo\">\n                username: <FormInput type=\"text\" name=\"username\" onChange={this.handleChange}/>\n                password: <FormInput type=\"password\" name=\"password\" onChange={this.handleChange}/>\n                {/* <input type=\"submit\" value=\"Login\" /> */}\n                <Button type=\"submit\">Login</Button>\n            </form>\n        )\n    }\n}\n\nexport default Login","import React, {Component} from 'react'\nimport Register from '../Register/Register'\nimport Login from './Login/Login'\nimport PlantNav from '../nav'\n\nclass AuthGateway extends Component {\n    constructor(){\n        super();\n        \n    }\n    render(){\n        return(\n            <div>\n                <PlantNav/>\n                <h1>Welcome to Plant<span role=\"img\">🌿</span>Nerd<span role=\"img\">🤓</span></h1>\n                <h3>Register as a new User</h3>\n                <Register handleRegister={this.props.handleRegister} />\n                <h3>Existing users login below</h3>\n                <Login handleLogin={this.props.handleLogin}/>\n            </div>\n        )\n    }\n}\n\nexport default AuthGateway","import React from 'react';\nimport MainContainer from \"./components/MainContainer\"\nimport AuthGateway from '../src/components/AuthGateway/AuthGateway'\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\"\nimport './App.css';\n\n\n\n// function App() {\n//   return (\n//     <div className=\"App\">      \n//       <MainContainer />\n//     </div>\n//   );\n// }\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      loggedIn: true, \n      username: null\n    }\n  }\n  handleRegister = async (formData) => {\n    console.log(\"REGISTERING\")\n    console.log(formData);\n    const registerResonse = await fetch(\"http://localhost:9000/auth/register\", {\n      method: \"POST\", \n      body: JSON.stringify(formData),\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n    const parsedResponse = await registerResonse.json();\n    console.log(parsedResponse)\n    if(parsedResponse.status.code === 201){\n      console.log(\"SUCCESFUL REGISTRATION\")\n      this.setState({\n        loggedIn: true,\n        username: parsedResponse.data.username\n      })\n    }\n  }\n  handleLogin = async (formData) => {\n    console.log(\"Loggin in%%%%%\")\n    console.log(formData);\n    const registerResonse = await fetch(\"http://localhost:9000/auth/login\", {\n      method: \"POST\", \n      body: JSON.stringify(formData),\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n    const parsedResponse = await registerResonse.json();\n    console.log(parsedResponse)\n    if(parsedResponse.status.code === 200){\n      console.log(\"SUCCESFUL LOGIN*********\")\n      this.setState({\n        loggedIn: true,\n        username: parsedResponse.data.username\n      })\n    }\n  }\n  render(){\n    return(\n      <div className=\"App\"> \n      {\n        this.state.loggedIn? \n        <MainContainer /> :\n        <AuthGateway handleLogin={this.handleLogin} handleRegister={this.handleRegister}/>\n      }     \n       \n      </div>\n    )\n  }\n}\n\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}